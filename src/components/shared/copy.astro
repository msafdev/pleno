---
import { themeConfig } from '@/config'
---

<script define:vars={{ copyCode: themeConfig.post.copyCode }}>
  function initCopyCode() {
    const copyIcon = `
      <svg xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 16 16" class="w-[14px] h-[14px]">
        <path d="M0 6.75C0 5.784.784 5 1.75 5h1.5a.75.75 0 0 1 0 1.5h-1.5a.25.25 0 0 0-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 0 0 .25-.25v-1.5a.75.75 0 0 1 1.5 0v1.5A1.75 1.75 0 0 1 9.25 16h-7.5A1.75 1.75 0 0 1 0 14.25Z" />
        <path d="M5 1.75C5 .784 5.784 0 6.75 0h7.5C15.216 0 16 .784 16 1.75v7.5A1.75 1.75 0 0 1 14.25 11h-7.5A1.75 1.75 0 0 1 5 9.25Zm1.75-.25a.25.25 0 0 0-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 0 0 .25-.25v-7.5a.25.25 0 0 0-.25-.25Z" />
      </svg>
    `

    const copiedIcon = `
      <svg xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 16 16" class="w-[16px] h-[16px]">
        <path d="M13.78 4.22a.75.75 0 0 1 0 1.06l-7.25 7.25a.75.75 0 0 1-1.06 0L2.22 9.28a.751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018L6 10.94l6.72-6.72a.75.75 0 0 1 1.06 0Z" />
      </svg>
    `

    document.documentElement.setAttribute('data-copy-code', copyCode ? 'enabled' : 'disabled')

    if (!copyCode) return

    const buttons = document.querySelectorAll('.copy-button')

    buttons.forEach((button) => {
      const pre = button.closest('.copy-code-block')
      const code = pre?.querySelector('code')
      if (!pre || !code) return

      if (!button.querySelector('svg')) {
        button.innerHTML = copyIcon
      }

      button.classList.add('opacity-0', 'pointer-events-none')

      pre.addEventListener('mouseenter', () => {
        button.classList.remove('opacity-0', 'pointer-events-none')
      })

      pre.addEventListener('mouseleave', () => {
        if (!button.hasAttribute('data-copying')) {
          button.classList.add('opacity-0', 'pointer-events-none')
        }
      })

      button.addEventListener('click', async () => {
        const codeText = code.textContent || ''
        try {
          await navigator.clipboard.writeText(codeText)
        } catch (err) {
          alert(err)
          const fallback = document.createElement('textarea')
          fallback.value = codeText
          fallback.style.position = 'fixed'
          fallback.style.opacity = '0'
          document.body.appendChild(fallback)
          fallback.focus()
          fallback.select()
          try {
            document.execCommand('copy')
          } catch (fallbackErr) {
            console.error('All clipboard methods failed', fallbackErr)
          }
          document.body.removeChild(fallback)
        }

        button.setAttribute('data-copying', 'true')
        button.innerHTML = copiedIcon

        setTimeout(() => {
          if (!pre.matches(':hover')) {
            button.classList.add('opacity-0', 'pointer-events-none')
          }
          button.removeAttribute('data-copying')
          setTimeout(() => {
            button.innerHTML = copyIcon
          }, 500)
        }, 1500)
      })
    })
  }

  document.addEventListener('astro:page-load', initCopyCode)
  document.addEventListener('DOMContentLoaded', initCopyCode)
</script>

<slot />
